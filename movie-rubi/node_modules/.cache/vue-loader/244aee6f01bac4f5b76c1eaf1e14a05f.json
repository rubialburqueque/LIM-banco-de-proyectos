{"remainingRequest":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/src/components/users/CardMovie.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/src/components/users/CardMovie.vue","mtime":1588090207740},{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydHsgbWFwTXV0YXRpb25zLCBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnCmltcG9ydCBNb3ZpZUNvbXAgZnJvbSAnLi9Nb3ZpZUNvbXAnCmltcG9ydCBNb3ZpZUZhdiBmcm9tICcuL01vdmllRmF2JwppbXBvcnQgU2VhcmNoQ29tcCBmcm9tICcuL1NlYXJjaENvbXAnCgogICAgY29uc3QgQVBJS0VZID0gJ2M5MzUxNzk4Y2Y4YTIzNWE2ZDZiMjRlMDY0NjYyNDU0JzsKICAgIGNvbnN0IEJBU0VVUkwgPSAnaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMyc7CiAgZXhwb3J0IGRlZmF1bHQgewpkYXRhICgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgIAogICAgICAgICAgICBhZGQ6IDAsCiAgICAgICAgICAgIHVzZXI6IHsKICAgICAgICAgICAgICAgIG5hbWU6ICdKZXN1cycsCiAgICAgICAgICAgICAgICBsYXN0TmFtZTogJ0xvcGV6JwogICAgICAgICAgICB9LAogICAgICAgICAgICBvbGRVc2VyOiBudWxsLAogICAgICAgICAgICBtb3ZpZXM6IFsKICAgICAgICAgICAgICAgCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHNlYXJjaE1vdmllczogewoKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2hvd0ZhdjogZmFsc2UsCiAgICAgICAgICAgIHBhZ2U6IDEsCiAgICAgICAgICAgIHRvdGFsX3BhZ2VzOiBudWxsCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOnsKICAgICAgICAuLi5tYXBTdGF0ZShbJ2Zhdk1vdmllcycsJ2NvdW50ZXInXSkKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIHBhZ2UgKCkgewogICAgICAgICAgICB0aGlzLmdldFBvcHVsYXJNb3ZpZXMoKQogICAgICAgIH0KICAgIH0sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgTW92aWVDb21wLAogICAgICAgIE1vdmllRmF2LAogICAgICAgIFNlYXJjaENvbXAKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgCiAgICAgICAgb25Ub2dnbGVMaWtlIChkYXRhKSB7CiAgICAgICAgICAgIGxldCBtb3ZpZUxpa2UgPSB0aGlzLm1vdmllcy5maW5kKG1vdmllID0+IG1vdmllLmlkID09IGRhdGEuaWQpCiAgICAgICAgICAgIG1vdmllTGlrZS5saWtlID0gZGF0YS5saWtlCiAgICAgICAgICAgIC8vIHRoaXMuJHN0b3JlLmNvbW1pdCgndG9nZ2xlRmF2TW92aWUnLCBtb3ZpZUxpa2UpCiAgICAgICAgICAgIHRoaXMuc3RvcmVGYXZvcml0YShtb3ZpZUxpa2UpCiAgICAgICAgICAgIHRoaXMuc2hvd0ZhdiA9IGRhdGEubGlrZQogICAgICAgIH0sCiAgICAgICAgZ2V0UG9wdWxhck1vdmllcyAoKSB7CiAgICAgICAgICAgIGNvbnN0IFVSTCA9IGAke0JBU0VVUkx9ZGlzY292ZXIvbW92aWU/c29ydF9ieT1wb3B1bGFyaXR5LmRlc2MmYXBpX2tleT0ke0FQSUtFWX0mcGFnZT0ke3RoaXMucGFnZX1gCiAgICAgICAgICAgIGZldGNoKFVSTCkKICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSkKICAgICAgICAgICAgICAgIC50aGVuKCh7cmVzdWx0cywgcGFnZSwgdG90YWxfcGFnZXN9KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocGFnZSwgdG90YWxfcGFnZXMpCiAgICAgICAgICAgICAgICAgICAgdGhpcy50b3RhbF9wYWdlcyA9IHRvdGFsX3BhZ2VzCiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb3ZpZXMgPSByZXN1bHRzLm1hcChtID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgbS5saWtlID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIHNldFBhZ2UgKHBhZ2UpIHsKICAgICAgICAgICAgdGhpcy5wYWdlID0gcGFnZQogICAgICAgICAgICB0aGlzLmdldFBvcHVsYXJNb3ZpZXMoKSAKICAgICAgICB9LAogICAgICAgIC4uLm1hcE11dGF0aW9ucyh7c3RvcmVGYXZvcml0YTogJ3RvZ2dsZUZhdk1vdmllJ30pCiAgICAgICAgLy8gb25IaWRlRmF2IChzaG93KSB7CiAgICAgICAgLy8gICAgIHRoaXMuc2hvd0ZhdiA9IHNob3cKICAgICAgICAvLyB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICBsZXQgbG9jYXRpb25VUkwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKQogICAgICAgIHRoaXMucGFnZSA9IGxvY2F0aW9uVVJMLnNlYXJjaFBhcmFtcy5nZXQoJ3BhZ2UnKSB8fCAxCiAgICAKICAgICAgICB0aGlzLmdldFBvcHVsYXJNb3ZpZXMoKQogICAgfSwKfQo="},{"version":3,"sources":["CardMovie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CardMovie.vue","sourceRoot":"src/components/users","sourcesContent":["<template>\n  <div class=\"container\">\n    <h5>Bienvenido {{ user.name }} {{ user.lastName }}</h5>\n    <SearchComp ref=\"searchComp\" v-model=\"searchMovies\"/>\n    <div v-show=\"! Object.keys(searchMovies).length\">\n        <h1>Peliculas App </h1>\n        <pre>{{ favMovies }}</pre>\n        <div class=\"row\">\n            <div class=\"col-12  col-md-6 col-lg-4 py-3\" v-for=\"(movie, key) in movies\" \n            :key=\"key\">\n                <MovieComp \n                :id=\"movie.id\" \n                :title=\"movie.title\" \n                :synopsis=\"movie.overview\" \n                :cover=\"movie.poster_path\"\n                :like=\"movie.like\"\n                @toggleLike=\"onToggleLike\"\n                />\n            </div>\n        </div>\n        <div class=\"row\">\n            <button @click=\"setPage(n)\" class=\"btn m-1\" :class=\"{\n                'btn-light': n != page,\n                'btn-primary': n == page\n            }\" v-for=\"(n, index) in total_pages\" :key=\"index\">\n                {{n}}\n                \n            </button>\n        </div>\n    </div>\n    <div v-show=\"Object.keys(searchMovies).length\">\n        <h1>Resultados de busqueda</h1>\n        <div class=\"row\">\n            <div class=\"col-12  col-md-6 col-lg-4 py-3\" v-for=\"(movie, key) in searchMovies.results\" \n            :key=\"key\"\n            >\n                <MovieComp \n                :id=\"movie.id\" \n                :title=\"movie.title\" \n                :synopsis=\"movie.overview\" \n                :cover=\"movie.poster_path\"\n                :like=\"movie.like\"\n                @toggleLike=\"onToggleLike\"\n                />\n            </div>\n        </div>  \n        <div class=\"row\">\n            <button @click=\"$refs.searchComp.setPage(n)\" class=\"btn m-1\" :class=\"{\n                'btn-light': n != searchMovies.page,\n                'btn-primary': n == searchMovies.page\n            }\" v-for=\"(n, index) in searchMovies.total_pages\" :key=\"index\">\n                {{n}}\n                \n            </button>\n        </div> \n    </div>\n    \n    <MovieFav :show.sync=\"showFav\"/>\n  </div>\n</template>\n\n<script>\nimport{ mapMutations, mapState } from 'vuex'\nimport MovieComp from './MovieComp'\nimport MovieFav from './MovieFav'\nimport SearchComp from './SearchComp'\n\n    const APIKEY = 'c9351798cf8a235a6d6b24e064662454';\n    const BASEURL = 'https://api.themoviedb.org/3';\n  export default {\ndata () {\n        return {\n           \n            add: 0,\n            user: {\n                name: 'Jesus',\n                lastName: 'Lopez'\n            },\n            oldUser: null,\n            movies: [\n               \n            ],\n            searchMovies: {\n\n            },\n            showFav: false,\n            page: 1,\n            total_pages: null\n        }\n    },\n    computed:{\n        ...mapState(['favMovies','counter'])\n    },\n    watch: {\n        page () {\n            this.getPopularMovies()\n        }\n    },\n    components: {\n        MovieComp,\n        MovieFav,\n        SearchComp\n    },\n    methods: {\n        \n        onToggleLike (data) {\n            let movieLike = this.movies.find(movie => movie.id == data.id)\n            movieLike.like = data.like\n            // this.$store.commit('toggleFavMovie', movieLike)\n            this.storeFavorita(movieLike)\n            this.showFav = data.like\n        },\n        getPopularMovies () {\n            const URL = `${BASEURL}discover/movie?sort_by=popularity.desc&api_key=${APIKEY}&page=${this.page}`\n            fetch(URL)\n                .then(response => response.json())\n                .then(({results, page, total_pages}) => {\n                    console.log(page, total_pages)\n                    this.total_pages = total_pages\n                    this.movies = results.map(m => {\n                        m.like = false\n                        return m\n                    })\n                })\n        },\n        setPage (page) {\n            this.page = page\n            this.getPopularMovies() \n        },\n        ...mapMutations({storeFavorita: 'toggleFavMovie'})\n        // onHideFav (show) {\n        //     this.showFav = show\n        // }\n    },\n    mounted() {\n        let locationURL = new URL(window.location.href)\n        this.page = locationURL.searchParams.get('page') || 1\n    \n        this.getPopularMovies()\n    },\n}\n</script>"]}]}