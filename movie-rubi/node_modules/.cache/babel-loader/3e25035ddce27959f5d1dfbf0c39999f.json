{"remainingRequest":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/babel-loader/lib/index.js!/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/src/components/users/CardMovie.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/src/components/users/CardMovie.vue","mtime":1587984003795},{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rubi/Documents/GitHub/LIM-banco-de-proyectos/movie-rubi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL3J1YmkvRG9jdW1lbnRzL0dpdEh1Yi9MSU0tYmFuY28tZGUtcHJveWVjdG9zL21vdmllLXJ1Ymkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgTW92aWVDb21wIGZyb20gJy4vTW92aWVDb21wJzsKaW1wb3J0IE1vdmllRmF2IGZyb20gJy4vTW92aWVGYXYnOwppbXBvcnQgU2VhcmNoQ29tcCBmcm9tICcuL1NlYXJjaENvbXAnOwp2YXIgQVBJS0VZID0gJ2M5MzUxNzk4Y2Y4YTIzNWE2ZDZiMjRlMDY0NjYyNDU0JzsKdmFyIEJBU0VVUkwgPSAnaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWRkOiAwLAogICAgICB1c2VyOiB7CiAgICAgICAgbmFtZTogJ0plc3VzJywKICAgICAgICBsYXN0TmFtZTogJ0xvcGV6JwogICAgICB9LAogICAgICBvbGRVc2VyOiBudWxsLAogICAgICBtb3ZpZXM6IFtdLAogICAgICBzZWFyY2hNb3ZpZXM6IHt9LAogICAgICBzaG93RmF2OiBmYWxzZSwKICAgICAgcGFnZTogMSwKICAgICAgdG90YWxfcGFnZXM6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgVnVleC5tYXBTdGF0ZShbJ2Zhdk1vdmllcycsICdjb3VudGVyJ10pKSwKICB3YXRjaDogewogICAgcGFnZTogZnVuY3Rpb24gcGFnZSgpIHsKICAgICAgdGhpcy5nZXRQb3B1bGFyTW92aWVzKCk7CiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBNb3ZpZUNvbXA6IE1vdmllQ29tcCwKICAgIE1vdmllRmF2OiBNb3ZpZUZhdiwKICAgIFNlYXJjaENvbXA6IFNlYXJjaENvbXAKICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoewogICAgb25Ub2dnbGVMaWtlOiBmdW5jdGlvbiBvblRvZ2dsZUxpa2UoZGF0YSkgewogICAgICB2YXIgbW92aWVMaWtlID0gdGhpcy5tb3ZpZXMuZmluZChmdW5jdGlvbiAobW92aWUpIHsKICAgICAgICByZXR1cm4gbW92aWUuaWQgPT0gZGF0YS5pZDsKICAgICAgfSk7CiAgICAgIG1vdmllTGlrZS5saWtlID0gZGF0YS5saWtlOyAvLyB0aGlzLiRzdG9yZS5jb21taXQoJ3RvZ2dsZUZhdk1vdmllJywgbW92aWVMaWtlKQoKICAgICAgdGhpcy5zdG9yZUZhdm9yaXRhKG1vdmllTGlrZSk7CiAgICAgIHRoaXMuc2hvd0ZhdiA9IGRhdGEubGlrZTsKICAgIH0sCiAgICBnZXRQb3B1bGFyTW92aWVzOiBmdW5jdGlvbiBnZXRQb3B1bGFyTW92aWVzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIFVSTCA9ICIiLmNvbmNhdChCQVNFVVJMLCAiZGlzY292ZXIvbW92aWU/c29ydF9ieT1wb3B1bGFyaXR5LmRlc2MmYXBpX2tleT0iKS5jb25jYXQoQVBJS0VZLCAiJnBhZ2U9IikuY29uY2F0KHRoaXMucGFnZSk7CiAgICAgIGZldGNoKFVSTCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIHJlc3VsdHMgPSBfcmVmLnJlc3VsdHMsCiAgICAgICAgICAgIHBhZ2UgPSBfcmVmLnBhZ2UsCiAgICAgICAgICAgIHRvdGFsX3BhZ2VzID0gX3JlZi50b3RhbF9wYWdlczsKICAgICAgICBjb25zb2xlLmxvZyhwYWdlLCB0b3RhbF9wYWdlcyk7CiAgICAgICAgX3RoaXMudG90YWxfcGFnZXMgPSB0b3RhbF9wYWdlczsKICAgICAgICBfdGhpcy5tb3ZpZXMgPSByZXN1bHRzLm1hcChmdW5jdGlvbiAobSkgewogICAgICAgICAgbS5saWtlID0gZmFsc2U7CiAgICAgICAgICByZXR1cm4gbTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgc2V0UGFnZTogZnVuY3Rpb24gc2V0UGFnZShwYWdlKSB7CiAgICAgIHRoaXMucGFnZSA9IHBhZ2U7CiAgICAgIHRoaXMuZ2V0UG9wdWxhck1vdmllcygpOwogICAgfQogIH0sIFZ1ZXgubWFwTXV0YXRpb25zKHsKICAgIHN0b3JlRmF2b3JpdGE6ICd0b2dnbGVGYXZNb3ZpZScKICB9KSksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBsb2NhdGlvblVSTCA9IG5ldyBVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpOwogICAgdGhpcy5wYWdlID0gbG9jYXRpb25VUkwuc2VhcmNoUGFyYW1zLmdldCgncGFnZScpIHx8IDE7CiAgICB0aGlzLmdldFBvcHVsYXJNb3ZpZXMoKTsKICB9Cn07"},{"version":3,"sources":["CardMovie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,QAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,cAAA;AAEA,IAAA,MAAA,GAAA,kCAAA;AACA,IAAA,OAAA,GAAA,8BAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AAEA,MAAA,GAAA,EAAA,CAFA;AAGA,MAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAHA;AAOA,MAAA,OAAA,EAAA,IAPA;AAQA,MAAA,MAAA,EAAA,EARA;AAWA,MAAA,YAAA,EAAA,EAXA;AAcA,MAAA,OAAA,EAAA,KAdA;AAeA,MAAA,IAAA,EAAA,CAfA;AAgBA,MAAA,WAAA,EAAA;AAhBA,KAAA;AAkBA,GApBA;AAqBA,EAAA,QAAA,oBACA,IAAA,CAAA,QAAA,CAAA,CAAA,WAAA,EAAA,SAAA,CAAA,CADA,CArBA;AAwBA,EAAA,KAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,gBAAA;AACA;AAHA,GAxBA;AA6BA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,UAAA,EAAA;AAHA,GA7BA;AAkCA,EAAA,OAAA;AAEA,IAAA,YAFA,wBAEA,IAFA,EAEA;AACA,UAAA,SAAA,GAAA,KAAA,MAAA,CAAA,IAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,IAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,MAAA,SAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAFA,CAGA;;AACA,WAAA,aAAA,CAAA,SAAA;AACA,WAAA,OAAA,GAAA,IAAA,CAAA,IAAA;AACA,KARA;AASA,IAAA,gBATA,8BASA;AAAA;;AACA,UAAA,GAAA,aAAA,OAAA,4DAAA,MAAA,mBAAA,KAAA,IAAA,CAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,CACA,IADA,CACA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,EAAA;AAAA,OADA,EAEA,IAFA,CAEA,gBAAA;AAAA,YAAA,OAAA,QAAA,OAAA;AAAA,YAAA,IAAA,QAAA,IAAA;AAAA,YAAA,WAAA,QAAA,WAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAAA,WAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,WAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,UAAA,CAAA,CAAA,IAAA,GAAA,KAAA;AACA,iBAAA,CAAA;AACA,SAHA,CAAA;AAIA,OATA;AAUA,KArBA;AAsBA,IAAA,OAtBA,mBAsBA,IAtBA,EAsBA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,gBAAA;AACA;AAzBA,KA0BA,IAAA,CAAA,YAAA,CAAA;AACA,IAAA,aAAA,EAAA;AADA,GAAA,CA1BA,CAlCA;AAmEA,EAAA,OAnEA,qBAmEA;AACA,QAAA,WAAA,GAAA,IAAA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,SAAA,IAAA,GAAA,WAAA,CAAA,YAAA,CAAA,GAAA,CAAA,MAAA,KAAA,CAAA;AAEA,SAAA,gBAAA;AACA;AAxEA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <h5>Bienvenido {{ user.name }} {{ user.lastName }}</h5>\n    <SearchComp ref=\"searchComp\" v-model=\"searchMovies\"/>\n    <div v-show=\"! Object.keys(searchMovies).length\">\n        <h1>Peliculas App </h1>\n        <pre>{{ favMovies }}</pre>\n        <div class=\"row\">\n            <div class=\"col-12  col-md-6 col-lg-4 py-3\" v-for=\"(movie, key) in movies\" \n            :key=\"key\">\n                <MovieComp \n                :id=\"movie.id\" \n                :title=\"movie.title\" \n                :synopsis=\"movie.overview\" \n                :cover=\"movie.poster_path\"\n                :like=\"movie.like\"\n                @toggleLike=\"onToggleLike\"\n                />\n            </div>\n        </div>\n        <div class=\"row\">\n            <button @click=\"setPage(n)\" class=\"btn m-1\" :class=\"{\n                'btn-light': n != page,\n                'btn-primary': n == page\n            }\" v-for=\"(n, index) in total_pages\" :key=\"index\">\n                {{n}}\n                \n            </button>\n        </div>\n    </div>\n    <div v-show=\"Object.keys(searchMovies).length\">\n        <h1>Resultados de busqueda</h1>\n        <div class=\"row\">\n            <div class=\"col-12  col-md-6 col-lg-4 py-3\" v-for=\"(movie, key) in searchMovies.results\" \n            :key=\"key\"\n            v-if=\"movie.poster_path\">\n                <MovieComp \n                :id=\"movie.id\" \n                :title=\"movie.title\" \n                :synopsis=\"movie.overview\" \n                :cover=\"movie.poster_path\"\n                :like=\"movie.like\"\n                @toggleLike=\"onToggleLike\"\n                />\n            </div>\n        </div>  \n        <div class=\"row\">\n            <button @click=\"$refs.searchComp.setPage(n)\" class=\"btn m-1\" :class=\"{\n                'btn-light': n != searchMovies.page,\n                'btn-primary': n == searchMovies.page\n            }\" v-for=\"(n, index) in searchMovies.total_pages\" :key=\"index\">\n                {{n}}\n                \n            </button>\n        </div> \n    </div>\n    \n    <MovieFav :show.sync=\"showFav\"/>\n  </div>\n</template>\n\n<script>\nimport MovieComp from './MovieComp'\nimport MovieFav from './MovieFav'\nimport SearchComp from './SearchComp'\n\n    const APIKEY = 'c9351798cf8a235a6d6b24e064662454';\n    const BASEURL = 'https://api.themoviedb.org/3';\n  export default {\ndata () {\n        return {\n           \n            add: 0,\n            user: {\n                name: 'Jesus',\n                lastName: 'Lopez'\n            },\n            oldUser: null,\n            movies: [\n               \n            ],\n            searchMovies: {\n\n            },\n            showFav: false,\n            page: 1,\n            total_pages: null\n        }\n    },\n    computed:{\n        ...Vuex.mapState(['favMovies','counter'])\n    },\n    watch: {\n        page () {\n            this.getPopularMovies()\n        }\n    },\n    components: {\n        MovieComp,\n        MovieFav,\n        SearchComp\n    },\n    methods: {\n        \n        onToggleLike (data) {\n            let movieLike = this.movies.find(movie => movie.id == data.id)\n            movieLike.like = data.like\n            // this.$store.commit('toggleFavMovie', movieLike)\n            this.storeFavorita(movieLike)\n            this.showFav = data.like\n        },\n        getPopularMovies () {\n            const URL = `${BASEURL}discover/movie?sort_by=popularity.desc&api_key=${APIKEY}&page=${this.page}`\n            fetch(URL)\n                .then(response => response.json())\n                .then(({results, page, total_pages}) => {\n                    console.log(page, total_pages)\n                    this.total_pages = total_pages\n                    this.movies = results.map(m => {\n                        m.like = false\n                        return m\n                    })\n                })\n        },\n        setPage (page) {\n            this.page = page\n            this.getPopularMovies() \n        },\n        ...Vuex.mapMutations({\n            storeFavorita: 'toggleFavMovie'\n        })\n        // onHideFav (show) {\n        //     this.showFav = show\n        // }\n    },\n    mounted() {\n        let locationURL = new URL(window.location.href)\n        this.page = locationURL.searchParams.get('page') || 1\n    \n        this.getPopularMovies()\n    },\n}\n</script>"],"sourceRoot":"src/components/users"}]}